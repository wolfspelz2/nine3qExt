apiVersion: v1
kind: ServiceAccount
metadata:
  name: cdn-embedded
  namespace: n3q-prod

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-secrets
  namespace: n3q-prod
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list", "create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: modify-secrets-to-sa
  namespace: n3q-prod
subjects:
  - kind: ServiceAccount
    name: cdn-embedded
roleRef:
  kind: Role
  name: modify-secrets
  apiGroup: rbac.authorization.k8s.io


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n3q-embedded
  namespace: n3q-prod
spec:
  selector:
    matchLabels:
      run: n3q-embedded
  replicas: 1
  template:
    metadata:
      labels:
        run: n3q-embedded
    spec:
      serviceAccountName: cdn-embedded
      containers:
        - name: n3q-embedded
          image: docker.k8s.sui.li/n3q-embedded:5f44abf8
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: kubectl-binary
              mountPath: /usr/bin/kubectl
              readOnly: true
            - name: htdocs
              mountPath: /pod-shared
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /usr/share/nginx/html /pod-shared/public; chmod -R 777 /pod-shared"]

        - name: php7fpm
          image: docker.k8s.sui.li/php7fpm
          imagePullPolicy: Always
          volumeMounts:
            - name: htdocs
              mountPath: /pod-shared

        - name: redis
          image: redis

      volumes:
      - name: kubectl-binary
        hostPath:
          path: /usr/bin/kubectl
      - name: htdocs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: n3q-embedded
  namespace: n3q-prod
  labels:
    run: n3q-embedded
spec:
  selector:
    run: n3q-embedded
  ports:
  - name: http
    port: 80
    protocol: TCP


