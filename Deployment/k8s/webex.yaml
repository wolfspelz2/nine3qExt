apiVersion: apps/v1
kind: Deployment
metadata:
  name: n3q-webex
  namespace: {NAMESPACE}
spec:
  selector:
    matchLabels:
      run: n3q-webex
  replicas: 1
  template:
    metadata:
      labels:
        run: n3q-webex
    spec:
      containers:
        - name: n3q-webex
          image: docker.k8s.sui.li/n3q-webex:latest
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: N3Q_CONFIG_ROOT
              value: {CONFIG_ROOT}
          volumeMounts:
            - name: configfileshare
              mountPath: /n3q-config
      volumes:
        - name: configfileshare
          azureFile:
            secretName: azure-storage-secret
            shareName: n3q-config
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: n3q-webex
  namespace: {NAMESPACE}
  labels:
    run: n3q-webex
spec:
  selector:
    run: n3q-webex
  ports:
  - name: http
    port: 80
    protocol: TCP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: n3q-webex-ingress
  namespace: {NAMESPACE}
  annotations:
    haproxy.org/check: "true"
    haproxy.org/forwarded-for: "true"
    haproxy.org/load-balance: "roundrobin"
    haproxy.org/ssl-redirect: "true"
spec:
  tls:
    - hosts:
      - {WEBEX_DOMAIN}
      secretName: devops/tls-vulcan-weblin-com
  rules:
  - host: {WEBEX_DOMAIN}
    http:
      paths:
      - path: /
        backend:
          serviceName: n3q-webex
          servicePort: 80
