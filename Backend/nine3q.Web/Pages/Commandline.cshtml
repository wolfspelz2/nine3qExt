@page
@model nine3q.Web.CommandlineModel
@{
    ViewData["Title"] = "Commandline";
}

<h1>@ViewData["Title"]</h1>

<div class="cCommandline">
    <div id="iMenu">
        @{
            var commandList = new Dictionary<string, Dictionary<string, CommandlineModel.CommandDetail>>();
            @foreach (var pair in Model.Commands) {
                var group = "General";
                var cmd = pair.Key;
                var parts = pair.Key.Split(new[] { '_', '.' }, 2, StringSplitOptions.RemoveEmptyEntries);
                if (parts.Length == 2) {
                    group = parts[0];
                    if (group == "Dev") { group = "General"; }
                    cmd = parts[1];
                }
                if (!commandList.ContainsKey(group)) { commandList[group] = new Dictionary<string, CommandlineModel.CommandDetail>(); }
                commandList[group].Add(cmd, pair.Value);
            }
        }
        @foreach (var pair in commandList) {
            var group = pair.Key;
            <div class="cCommandGroup">
                <span>@group</span>
                @foreach (var pair2 in pair.Value) {
                    var detail = pair2.Value;
                    var cmd = pair2.Key;
                    <div class="cCommandItem">
                        <a href="#" class="cTextButton cLabel" data-template="@detail.Template" title="@detail.Arguments">@cmd</a>
                        <a href="#" class="cTextButton cInsert" data-template="@detail.Template" title="Show command">&gt</a>
                        @if (detail.ImmediateExecute) {
                            <a href="#" class="cTextButton cExecute" data-template="@detail.Template" title="Execute command">&gt;&gt;</a>
                        }
                    </div>
                }
            </div>
        }
    </div>
</div>

<div>
    <div id="iIn">
        <form id="iForm" method="post">
            <div>
                @Html.TextArea("cmd", "", new { id = "iCommand", rows = "3", cols = "120" })
                @Html.Hidden("handler", "Run")
            </div>
            <div>
                <input type="submit" id="iPostForm" value="Enter" />
                <input type="button" id="iClearInput" value="Clear input" />
                <input type="button" id="iClearOutput" value="Clear output" />
            </div>
        </form>
    </div>
</div>

<div>
    <div id="iOut">
    </div>
</div>

@section Scripts {
    <script type="text/JavaScript">

        var g_nCnt = 0;

        function SetInput(text) {
            $('#iCommand').val(text);
        }

        function FocusInput() {
            $('#iCommand')[0].focus();
        }

        function AddOutput(cmd, text) {
            g_nCnt++;
            var sId = 'iTransaction' + g_nCnt;
            var js = ''
                + '<div id="' + sId + '" class="cTransaction" style="display: none;">'
                + '  <div class="cOriginalCommand">'
                + '  <span class="cButtons">'
                + '    <a href="#" class="cTextButton cDelete" data-transaction="' + sId + '">x</a>'
                + '    <a href="#" class="cTextButton cInsert" data-template="' + cmd + '">&gt;</a>'
                + '    <a href="#" class="cTextButton cExecute" data-template="' + cmd + '">&gt;&gt;</a>'
                + '  </span>'
                + '  <span class="cCommand">'
                + cmd
                + '  </span>'
                + '  </div>'
                + '  <div class="cResult">'
                + text
                + '  </div>'
                + '</div>';

            $('#iOut').prepend(js);

            $('#' + sId).slideToggle(100);

            $('#' + sId + ' .cDelete').on('click', function (evt) {
                DeleteTransaction($(evt.target).data('transaction'));
                return false;
            });

            $('#' + sId + ' .cInsert').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                FocusInput();
                return false;
            });

            $('#' + sId + ' .cExecute').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                PostForm();
                FocusInput();
                return false;
            });
        }

        function DeleteTransaction(id) {
            $('#' + id).remove();
        }

        function ClearInput() {
            $('#iCommand').val('');
        }

        function ClearOutput() {
            $('#iOut').empty();
        }

        function PostForm() {
            Execute($('#iCommand').val(), $('#iForm').serialize());
        }

        function Execute(cmd, postData) {
            $.ajax({
                async: true,
                type: "POST",
                url: "/Commandline?handler=run",
                data: postData
            }).done(function (text) {
                AddOutput(cmd, text);
                ClearInput();
                FocusInput();
            });
        }

        $(function () {
            $('#iPostForm').on('click', function (evt) {
                PostForm();
                return false;
            });
        });

        $(function () {
            $('#iCommand').on('keydown', function (evt) {
                if (evt.which == 13 && evt.ctrlKey) {
                    PostForm();
                    return false;
                }
            });
        });

        $(function () {
            $('#iClearInput').on('click', function (evt) {
                ClearInput();
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('#iClearOutput').on('click', function (evt) {
                ClearOutput();
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('.cCommandItem .cLabel').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('.cInsert').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('.cExecute').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                PostForm();
                return false;
            });
        });

    </script>
}
