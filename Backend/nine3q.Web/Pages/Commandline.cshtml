@page
@model nine3q.Web.CommandlineModel
@{
    ViewData["Title"] = "Commandline";
}

<h1>@ViewData["Title"]</h1>

<div class="cCommandline">
    <div id="iMenu">
        @{
            var commandList = new Dictionary<string, Dictionary<string, CommandlineModel.CommandDetail>>();
            @foreach (var pair in Model.Commands) {
                var group = "General";
                var cmd = pair.Key;
                var parts = pair.Key.Split(new[] { '_', '.' }, 2, StringSplitOptions.RemoveEmptyEntries);
                if (parts.Length == 2) {
                    group = parts[0];
                    if (group == "Dev") { group = "General"; }
                    cmd = parts[1];
                }
                if (!commandList.ContainsKey(group)) { commandList[group] = new Dictionary<string, CommandlineModel.CommandDetail>(); }
                commandList[group].Add(cmd, pair.Value);
            }
        }
        @foreach (var pair in commandList) {
            var group = pair.Key;
            <div class="cCommandGroup">
                <span>@group</span>:
                @foreach (var pair2 in pair.Value) {
                    var detail = pair2.Value;
                    var cmd = pair2.Key;
                    <div class="cCommandItem">
                        <a href="#" data-template="@detail.Template" title="@detail.Arguments">@cmd</a>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div>
    <div id="iIn">
        <form id="iForm" method="post">
            <div>
                @Html.TextArea("cmd", "", new { id = "iCommand", rows = "3", cols ="120"})
                @Html.Hidden("handler", "Run")
            </div>
            <div>
                <input type="submit" value="Enter" />
                <input type="button" id="iClearInput" value="Clear Input" />
                <input type="button" id="iClearOutput" value="Clear Output" />
            </div>
        </form>
    </div>
</div>

<div>
    <div id="iOut">
    </div>
</div>

@section Scripts {
    <script type="text/JavaScript">

        var g_nCnt = 0;

        function SetInput(sText) {
            $('#iCommand').val(sText);
        }

        function FocusInput() {
            $('#iCommand')[0].focus();
        }

        function AddOutput(text) {
            g_nCnt++;
            var sId = 'iTransaction' + g_nCnt;
            var js = ''
                + '<div id=' + sId + '" class="cTransaction">'
                + text
                + '</div>';
            $('#iOut').prepend(js);
            $('#' + sId).slideToggle(100);
        }

        function ClearInput() {
            $('#iCommand').val('');
        }

        function ClearOutput() {
            $('#iOut').empty();
        }

        function PostForm() {
            Execute($('#iForm').serialize());
        }

        function Execute(postData) {
            $.ajax({
                async: true,
                type: "POST",
                url: "/Commandline?handler=run",
                data: postData
            }).done(function (text) {
                AddOutput(text);
                FocusInput();
            });
        }

        $(function () {
            $('#iForm').on('click', function (evt) {
                PostForm();
                return false;
            });
        });

        $(function () {
            $('#iClearInput').on('click', function (evt) {
                ClearInput();
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('#iClearOutput').on('click', function (evt) {
                ClearOutput();
                FocusInput();
                return false;
            });
        });

        $(function () {
            $('.cMenuItem').on('click', function (evt) {
                SetInput($(evt.target).data('template'));
                FocusInput();
                return false;
            });
        });

    </script>
}
